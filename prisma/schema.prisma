// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Exercise {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String   @unique

  templateExercises TemplateExercise[]
  templates         Template[]

  workoutExercises WorkoutExercise[]
  workouts         Workout[]
}

model Template {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  name      String
  workouts  Workout[]

  templateExercises TemplateExercise[]
  Exercise          Exercise?          @relation(fields: [exerciseId], references: [id])
  exerciseId        Int?
}

model TemplateExercise {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  template   Template @relation(fields: [templateId], references: [id])
  templateId Int

  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int

  defaultSets Int
  defaultReps Int
}

model Workout {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  template        Template          @relation(fields: [templateId], references: [id])
  templateId      Int
  exercises       Exercise[]
  WorkoutExercise WorkoutExercise[]
}

model WorkoutExercise {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  workout   Workout @relation(fields: [workoutId], references: [id])
  workoutId Int

  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int

  reps Rep[]

  sets   Int
  weight Int
}

model Rep {
  id                Int             @id @default(autoincrement())
  weight            Int
  workoutExercise   WorkoutExercise @relation(fields: [workoutExerciseId], references: [id])
  workoutExerciseId Int
}
